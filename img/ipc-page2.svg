<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="981px" preserveAspectRatio="none" style="width:2609px;height:981px;background:#FFFFFF;" version="1.1" viewBox="0 0 2609 981" width="2609px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="918.5522" style="stroke:#000000;stroke-width:1.0;" width="10" x="630.5" y="47.0146"/><rect fill="#FFFFFF" height="626.1577" style="stroke:#000000;stroke-width:1.0;" width="10" x="1386.5" y="339.4092"/><rect fill="#FFFFFF" height="277.5952" style="stroke:#000000;stroke-width:1.0;" width="10" x="1624.5" y="687.9717"/><rect fill="#FFFFFF" height="46.7993" style="stroke:#000000;stroke-width:1.0;" width="10" x="2141.5" y="918.7676"/><rect fill="#FFFFFF" height="900.5522" style="stroke:#000000;stroke-width:1.0;" width="2211.5" x="25" y="56.0146"/><rect fill="#FFFFFF" height="549.5591" style="stroke:none;stroke-width:1.0;" width="2211.5" x="25" y="407.0078"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="108" x2="108" y1="37.0146" y2="974.5669"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="635" x2="635" y1="37.0146" y2="974.5669"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1391.5" x2="1391.5" y1="37.0146" y2="974.5669"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="1629" x2="1629" y1="37.0146" y2="974.5669"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="2146.5" x2="2146.5" y1="37.0146" y2="974.5669"/><rect fill="#FFFFFF" height="31.0146" style="stroke:#000000;stroke-width:1.0;" width="127" x="45" y="5"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="113" x="52" y="26.0752">BrokerProcess</text><rect fill="#FFFFFF" height="31.0146" style="stroke:#000000;stroke-width:1.0;" width="109" x="581" y="5"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="95" x="588" y="26.0752">HostProcess</text><rect fill="#FFFFFF" height="31.0146" style="stroke:#000000;stroke-width:1.0;" width="118" x="1332.5" y="5"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="104" x="1339.5" y="26.0752">NativeModule</text><rect fill="#FFFFFF" height="31.0146" style="stroke:#000000;stroke-width:1.0;" width="175" x="1542" y="5"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="161" x="1549" y="26.0752">ManagedModuleHost</text><rect fill="#FFFFFF" height="31.0146" style="stroke:#000000;stroke-width:1.0;" width="140" x="2076.5" y="5"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="126" x="2083.5" y="26.0752">ManagedModule</text><rect fill="#FFFFFF" height="918.5522" style="stroke:#000000;stroke-width:1.0;" width="10" x="630.5" y="47.0146"/><rect fill="#FFFFFF" height="626.1577" style="stroke:#000000;stroke-width:1.0;" width="10" x="1386.5" y="339.4092"/><rect fill="#FFFFFF" height="277.5952" style="stroke:#000000;stroke-width:1.0;" width="10" x="1624.5" y="687.9717"/><rect fill="#FFFFFF" height="46.7993" style="stroke:#000000;stroke-width:1.0;" width="10" x="2141.5" y="918.7676"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="5" x2="2602.5" y1="48.0146" y2="48.0146"/><path d="M25,56.0146 L89,56.0146 L89,63.0146 L79,73.0146 L25,73.0146 L25,56.0146 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="900.5522" style="stroke:#000000;stroke-width:1.0;" width="2211.5" x="25" y="56.0146"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="19" x="40" y="70.0845">alt</text><text fill="#000000" font-family="Verdana" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="140" x="104" y="69.0737">[Load native module]</text><polygon fill="#000000" points="618.5,91.6133,628.5,95.6133,618.5,99.6133,622.5,95.6133" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="108.5" x2="624.5" y1="95.6133" y2="95.6133"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="115.5" y="90.8838">10</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="476" x="137.5" y="90.8838">ipc::Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, host-target)</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="125.4126" y2="125.4126"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="125.4126" y2="138.4126"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="138.4126" y2="138.4126"/><polygon fill="#000000" points="651.5,134.4126,641.5,138.4126,651.5,142.4126,647.5,138.4126" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="120.6831">11</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="348" x="669.5" y="120.6831">UniversalModuleHost::OnMessageFromBroker()</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="168.2119" y2="168.2119"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="168.2119" y2="181.2119"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="181.2119" y2="181.2119"/><polygon fill="#000000" points="651.5,177.2119,641.5,181.2119,651.5,185.2119,647.5,181.2119" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="163.4824">12</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="265" x="669.5" y="163.4824">UniversalModuleHost::LoadModule()</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="211.0112" y2="211.0112"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="211.0112" y2="224.0112"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="224.0112" y2="224.0112"/><polygon fill="#000000" points="651.5,220.0112,641.5,224.0112,651.5,228.0112,647.5,224.0112" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="206.2817">13</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="238" x="669.5" y="206.2817">check PE header for module type</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="253.8105" y2="253.8105"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="253.8105" y2="266.8105"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="266.8105" y2="266.8105"/><polygon fill="#000000" points="651.5,262.8105,641.5,266.8105,651.5,270.8105,647.5,266.8105" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="249.0811">14</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="395" x="669.5" y="249.0811">UniversalModuleHost::LoadNativeModule(path/to/dll)</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="296.6099" y2="296.6099"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="296.6099" y2="309.6099"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="309.6099" y2="309.6099"/><polygon fill="#000000" points="651.5,305.6099,641.5,309.6099,651.5,313.6099,647.5,309.6099" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="291.8804">15</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="158" x="669.5" y="291.8804">NativeModule::Load()</text><polygon fill="#000000" points="1374.5,335.4092,1384.5,339.4092,1374.5,343.4092,1378.5,339.4092" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="1380.5" y1="339.4092" y2="339.4092"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="334.6797">16</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="157" x="669.5" y="334.6797">LoadLibrary native dll</text><polygon fill="#000000" points="1374.5,365.2085,1384.5,369.2085,1374.5,373.2085,1378.5,369.2085" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="1380.5" y1="369.2085" y2="369.2085"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="364.479">17</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="91" x="669.5" y="364.479">InitModule()</text><polygon fill="#000000" points="1374.5,395.0078,1384.5,399.0078,1374.5,403.0078,1378.5,399.0078" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="1380.5" y1="399.0078" y2="399.0078"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="394.2783">18</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="236" x="669.5" y="394.2783">ConnectModule(OnMsg, OnDiag)</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="25" x2="2236.5" y1="408.0078" y2="408.0078"/><text fill="#000000" font-family="Verdana" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="186" x="30" y="419.0669">[Load managed DLL module]</text><polygon fill="#000000" points="618.5,440.1758,628.5,444.1758,618.5,448.1758,622.5,444.1758" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="108.5" x2="624.5" y1="444.1758" y2="444.1758"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="115.5" y="439.4463">19</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="476" x="137.5" y="439.4463">ipc::Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, host-target)</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="473.9751" y2="473.9751"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="473.9751" y2="486.9751"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="486.9751" y2="486.9751"/><polygon fill="#000000" points="651.5,482.9751,641.5,486.9751,651.5,490.9751,647.5,486.9751" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="469.2456">20</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="348" x="669.5" y="469.2456">UniversalModuleHost::OnMessageFromBroker()</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="516.7744" y2="516.7744"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="516.7744" y2="529.7744"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="529.7744" y2="529.7744"/><polygon fill="#000000" points="651.5,525.7744,641.5,529.7744,651.5,533.7744,647.5,529.7744" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="512.0449">21</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="265" x="669.5" y="512.0449">UniversalModuleHost::LoadModule()</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="559.5737" y2="559.5737"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="559.5737" y2="572.5737"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="572.5737" y2="572.5737"/><polygon fill="#000000" points="651.5,568.5737,641.5,572.5737,651.5,576.5737,647.5,572.5737" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="554.8442">22</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="238" x="669.5" y="554.8442">check PE header for module type</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="602.373" y2="602.373"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="602.373" y2="615.373"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="615.373" y2="615.373"/><polygon fill="#000000" points="651.5,611.373,641.5,615.373,651.5,619.373,647.5,615.373" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="597.6436">23</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="432" x="669.5" y="597.6436">UniversalModuleHost::LoadManagedDllModule(path/to/dll)</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="645.1724" y2="645.1724"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="645.1724" y2="658.1724"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="658.1724" y2="658.1724"/><polygon fill="#000000" points="651.5,654.1724,641.5,658.1724,651.5,662.1724,647.5,658.1724" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="640.4429">24</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="209" x="669.5" y="640.4429">Load .Net CLR if not yet done</text><polygon fill="#000000" points="1612.5,683.9717,1622.5,687.9717,1612.5,691.9717,1616.5,687.9717" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="1618.5" y1="687.9717" y2="687.9717"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="683.2422">25</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="302" x="669.5" y="683.2422">load ManagedHost.dll in custom .Net host</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="717.771" y2="717.771"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="717.771" y2="730.771"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="730.771" y2="730.771"/><polygon fill="#000000" points="651.5,726.771,641.5,730.771,651.5,734.771,647.5,730.771" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="713.0415">26</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="294" x="669.5" y="713.0415">ManagedHost::LoadModule(path/to/dll)</text><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="682.5" y1="760.5703" y2="760.5703"/><line style="stroke:#000000;stroke-width:1.0;" x1="682.5" x2="682.5" y1="760.5703" y2="773.5703"/><line style="stroke:#000000;stroke-width:1.0;" x1="641.5" x2="682.5" y1="773.5703" y2="773.5703"/><polygon fill="#000000" points="651.5,769.5703,641.5,773.5703,651.5,777.5703,647.5,773.5703" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="755.8408">27</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="604" x="669.5" y="755.8408">Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, ipc::KnownService::ManagedHost)</text><polygon fill="#000000" points="1612.5,799.3696,1622.5,803.3696,1612.5,807.3696,1616.5,803.3696" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="640.5" x2="1618.5" y1="803.3696" y2="803.3696"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="647.5" y="798.6401">28</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="435" x="669.5" y="798.6401">invoke native-&gt;managed Ipc.MessageFromHostToModule()</text><line style="stroke:#000000;stroke-width:1.0;" x1="1634.5" x2="1676.5" y1="833.1689" y2="833.1689"/><line style="stroke:#000000;stroke-width:1.0;" x1="1676.5" x2="1676.5" y1="833.1689" y2="846.1689"/><line style="stroke:#000000;stroke-width:1.0;" x1="1635.5" x2="1676.5" y1="846.1689" y2="846.1689"/><polygon fill="#000000" points="1645.5,842.1689,1635.5,846.1689,1645.5,850.1689,1641.5,846.1689" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="1641.5" y="828.4395">29</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="342" x="1663.5" y="828.4395">ManagedHost.Program.OnMessageFromHost()</text><line style="stroke:#000000;stroke-width:1.0;" x1="1634.5" x2="1676.5" y1="875.9683" y2="875.9683"/><line style="stroke:#000000;stroke-width:1.0;" x1="1676.5" x2="1676.5" y1="875.9683" y2="888.9683"/><line style="stroke:#000000;stroke-width:1.0;" x1="1635.5" x2="1676.5" y1="888.9683" y2="888.9683"/><polygon fill="#000000" points="1645.5,884.9683,1635.5,888.9683,1645.5,892.9683,1641.5,888.9683" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="1641.5" y="871.2388">30</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="275" x="1663.5" y="871.2388">ModuleHost.LoadModule(path/to/dll)</text><polygon fill="#000000" points="2129.5,914.7676,2139.5,918.7676,2129.5,922.7676,2133.5,918.7676" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="1634.5" x2="2135.5" y1="918.7676" y2="918.7676"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="1641.5" y="914.0381">31</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="275" x="1663.5" y="914.0381">Load dll in own AssemblyLoadContext</text><polygon fill="#000000" points="2129.5,944.5669,2139.5,948.5669,2129.5,952.5669,2133.5,948.5669" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="1634.5" x2="2135.5" y1="948.5669" y2="948.5669"/><text fill="#000000" font-family="Verdana" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="18" x="1641.5" y="943.8374">32</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="140" x="1663.5" y="943.8374">IModule.Initialize()</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="5" x2="2602.5" y1="963.5669" y2="963.5669"/><!--MD5=[78fe12c2f94c9aef74f103e129da7fa6]
@startuml IPC
!theme plain
hide footbox

autonumber
participant BrokerProcess as B
participant HostProcess as H
participant NativeModule as NM
participant ManagedModuleHost as MMH
participant ManagedModule as MM

B->B: BrokerInstance::Init() => process broker.json
loop Launch processes
    B->B: ChildProcess::Launch()
    B->H ++: CreateProcess/AsUser()
    B->B: ipc::StartRead(),StartForwardStderr()
    B->B: start child proc monitoring
    B->H: ChildProcess::SendMsg(ipc::KnownService::HostInit)
    H->H: Remember host target GUID
    H->H: UniversalModuleHost::OnMessageFromBroker()
    B->B: ChildProcess::LoadModules()
end
    
newpage

alt Load native module
    B->H: ipc::Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, host-target)
    H->H: UniversalModuleHost::OnMessageFromBroker()
    H->H: UniversalModuleHost::LoadModule()
    H->H: check PE header for module type
    H->H: UniversalModuleHost::LoadNativeModule(path/to/dll)
    H->H: NativeModule::Load()
    H->NM ++: LoadLibrary native dll
    H->NM: InitModule()
    H->NM: ConnectModule(OnMsg, OnDiag)
else Load managed DLL module
    B->H: ipc::Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, host-target)
    H->H: UniversalModuleHost::OnMessageFromBroker()
    H->H: UniversalModuleHost::LoadModule()
    H->H: check PE header for module type
    H->H: UniversalModuleHost::LoadManagedDllModule(path/to/dll)
    H->H: Load .Net CLR if not yet done
    H->MMH ++: load ManagedHost.dll in custom .Net host
    H->H: ManagedHost::LoadModule(path/to/dll)
    H->H: Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, ipc::KnownService::ManagedHost)
    H->MMH: invoke native->managed Ipc.MessageFromHostToModule()
    MMH->MMH: ManagedHost.Program.OnMessageFromHost()
    MMH->MMH: ModuleHost.LoadModule(path/to/dll)
    MMH->MM ++: Load dll in own AssemblyLoadContext
    MMH->MM: IModule.Initialize()
end

newpage

alt Send diagnostics from native module
    NM->NM: spdlog::info("hello world")
    NM->H: via stderr: "[INF] hello world"
else Send diagnostics from managed module
    MM->MM: _logger.Information("hello world")
    MM->H: UniversalModuleHost.exe/OnLog(2, "hello world")
    H->H: SPDLOG_LOGGER_CALL(default_logger, 2, "hello world")
end

newpage

alt Send message from native module
    NM->H: SendMsg(Mod, "some event", serviceGuid, session)
    H->H: NativeModule::OnMsg(Mod, "some event", serviceGuid, session)
    H->H: UniversalModuleHost::OnMessageFromModule(Mod, "some event", Target(serviceGuid, session))
    H->H: ipc::Send("some event", target)
    H->B: via stdout: serialized msg/target
    B->B: ReadFile(stdin) => deserialize msg/target
    B->B: BrokerInstance::OnMessage("some event", target)
    loop for all host processes
        B->B: ChildProcess::Send("some event", target)
        B->B: ipc::Send("some event", target)
        B->H: via stdout: serialized msg/target
        H->H: ReadFile(stdin) => deserialize msg/target
        H->H: UniversalModuleHost::OnMessageFromBroker()
        loop for all native modules
            H->H: NativeModule::Send()
            H->NM: Native.dll/OnMessage("some event", target)
        end
        opt if any managed modules
            H->H: ManagedHost::Send()
            H->MMH: ManagedHost.dll/Ipc.MessageFromHostToModule()
            MMH->MM: App.OnMessageFromHost("some event", serviceGuid, session)
        end
    end
else Send message from managed module
    MM->MM: Ipc.SendMessage("some event", serviceGuid, session)
    MM->H: UniversalModuleHost.exe/MessageFromModuleToHost("some event", serviceGuid, session)
    H->H: ManagedHost::OnMessageFromModule("some event", Target(serviceGuid, session))
    H->H: UniversalModuleHost::OnMessageFromModule(null, "some event", target)
    H->H: ipc::Send("some event", target)
    Note right of H: dispatch further same as with native module as msg source
end
@enduml

@startuml IPC







<style>
  root {
    BackgroundColor white
    FontColor black
    FontName Verdana
    HyperLinkColor blue
    LineColor black
    LineThickness 1
    Margin 5
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  header {
    LineThickness 0
  }
  node {
    MaximumWidth 300
  }
  title {
    FontSize 22
    LineThickness 0
  }
</style>

skinparam ArrowLollipopColor black
skinparam BackgroundColor white
skinparam DefaultFontName Verdana
skinparam DefaultMonospacedFontName Courier
skinparam LifelineStrategy nosolid
skinparam ParticipantPadding 10
skinparam SequenceLifeLineBorderColor black
skinparam Shadowing false
skinparam UseBetaStyle true

skinparam Activity {
  BackgroundColor white
  BarColor black
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam Boundary {
  FontColor black
}
skinparam Box {
  Padding 5
}
skinparam CircledCharacter {
  FontColor black
  FontName Courier
  Radius 9
}
skinparam Class {
  BackgroundColor white
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam ClassAttribute {
  FontColor black
  FontName Verdana
}
skinparam ClassStereotype {
  FontColor black
  FontName Verdana
}
skinparam Footer {
  FontColor black
  FontName Verdana
}
skinparam Header {
  FontColor black
  FontName Verdana
}
skinparam Hyperlink {
  Color blue
}
skinparam IconPackage {
  Color black
  BackgroundColor white
}
skinparam IconPrivate {
  Color black
  BackgroundColor white
}
skinparam IconProtected {
  Color black
  BackgroundColor white
}
skinparam IconPublic {
  Color black
  BackgroundColor white
}
skinparam Note {
  FontColor black
  FontName Verdana
}
skinparam Object {
  BorderColor black
}
skinparam Package {
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam State {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeA {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeC {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeE {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeI {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeN {
  BackgroundColor white
  BorderColor black
}
skinparam UseCaseStereoType {
  FontColor black
  FontName Verdana
}
hide footbox

autonumber
participant BrokerProcess as B
participant HostProcess as H
participant NativeModule as NM
participant ManagedModuleHost as MMH
participant ManagedModule as MM

B->B: BrokerInstance::Init() => process broker.json
loop Launch processes
    B->B: ChildProcess::Launch()
    B->H ++: CreateProcess/AsUser()
    B->B: ipc::StartRead(),StartForwardStderr()
    B->B: start child proc monitoring
    B->H: ChildProcess::SendMsg(ipc::KnownService::HostInit)
    H->H: Remember host target GUID
    H->H: UniversalModuleHost::OnMessageFromBroker()
    B->B: ChildProcess::LoadModules()
end
    
newpage

alt Load native module
    B->H: ipc::Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, host-target)
    H->H: UniversalModuleHost::OnMessageFromBroker()
    H->H: UniversalModuleHost::LoadModule()
    H->H: check PE header for module type
    H->H: UniversalModuleHost::LoadNativeModule(path/to/dll)
    H->H: NativeModule::Load()
    H->NM ++: LoadLibrary native dll
    H->NM: InitModule()
    H->NM: ConnectModule(OnMsg, OnDiag)
else Load managed DLL module
    B->H: ipc::Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, host-target)
    H->H: UniversalModuleHost::OnMessageFromBroker()
    H->H: UniversalModuleHost::LoadModule()
    H->H: check PE header for module type
    H->H: UniversalModuleHost::LoadManagedDllModule(path/to/dll)
    H->H: Load .Net CLR if not yet done
    H->MMH ++: load ManagedHost.dll in custom .Net host
    H->H: ManagedHost::LoadModule(path/to/dll)
    H->H: Send(ipc::HostCmdMsg::Cmd::CtrlModule/Load, ipc::KnownService::ManagedHost)
    H->MMH: invoke native->managed Ipc.MessageFromHostToModule()
    MMH->MMH: ManagedHost.Program.OnMessageFromHost()
    MMH->MMH: ModuleHost.LoadModule(path/to/dll)
    MMH->MM ++: Load dll in own AssemblyLoadContext
    MMH->MM: IModule.Initialize()
end

newpage

alt Send diagnostics from native module
    NM->NM: spdlog::info("hello world")
    NM->H: via stderr: "[INF] hello world"
else Send diagnostics from managed module
    MM->MM: _logger.Information("hello world")
    MM->H: UniversalModuleHost.exe/OnLog(2, "hello world")
    H->H: SPDLOG_LOGGER_CALL(default_logger, 2, "hello world")
end

newpage

alt Send message from native module
    NM->H: SendMsg(Mod, "some event", serviceGuid, session)
    H->H: NativeModule::OnMsg(Mod, "some event", serviceGuid, session)
    H->H: UniversalModuleHost::OnMessageFromModule(Mod, "some event", Target(serviceGuid, session))
    H->H: ipc::Send("some event", target)
    H->B: via stdout: serialized msg/target
    B->B: ReadFile(stdin) => deserialize msg/target
    B->B: BrokerInstance::OnMessage("some event", target)
    loop for all host processes
        B->B: ChildProcess::Send("some event", target)
        B->B: ipc::Send("some event", target)
        B->H: via stdout: serialized msg/target
        H->H: ReadFile(stdin) => deserialize msg/target
        H->H: UniversalModuleHost::OnMessageFromBroker()
        loop for all native modules
            H->H: NativeModule::Send()
            H->NM: Native.dll/OnMessage("some event", target)
        end
        opt if any managed modules
            H->H: ManagedHost::Send()
            H->MMH: ManagedHost.dll/Ipc.MessageFromHostToModule()
            MMH->MM: App.OnMessageFromHost("some event", serviceGuid, session)
        end
    end
else Send message from managed module
    MM->MM: Ipc.SendMessage("some event", serviceGuid, session)
    MM->H: UniversalModuleHost.exe/MessageFromModuleToHost("some event", serviceGuid, session)
    H->H: ManagedHost::OnMessageFromModule("some event", Target(serviceGuid, session))
    H->H: UniversalModuleHost::OnMessageFromModule(null, "some event", target)
    H->H: ipc::Send("some event", target)
    Note right of H: dispatch further same as with native module as msg source
end
@enduml

PlantUML version 1.2022.0(Tue Jan 11 17:16:42 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>